{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Git Open Source Hodler","text":"<p>(Yes, it's Hodler).</p> <p>GOSH is a blockchain built around securing the software supply chain and capturing the immense value in open source projects. This is achieved through record-setting blockchain tech, distributed programming, and a decentralized architecture - integrated into the same familiar git, meaning there is no change to the workflow.</p>"},{"location":"#motivation","title":"Motivation","text":"<p>The Software Supply Chain is a high-impact area. Yet there exists a distinctive lack of secure, trustless, verifiable, and transparent delivery of source code/binaries to developers and users in all software fields. Storing your code on a git means it has an owner, a single point of control, which leads to security vulnerabilities. Currently there is no industrial solution available that is not centralized and thus not dependent on the decisions of a few actors. The main way in which GOSH solves this issue is through allowing developers to build consensus around their code, so the more code is written, the more secure it becomes.</p>"},{"location":"#objective","title":"Objective","text":"<p>To create a truly decentralized development environment so that open source repositories can be run, governed, and monetized collectively. All the while, mitigating security and transparency issues arising from a conventional software supply chain.</p>"},{"location":"#architecture","title":"Architecture","text":"<ol> <li>Build a scalable multithreaded, multisharded content addressable blockchain</li> <li>Implement Git using smart contracts</li> <li>Implement DAO on top of that Git to allow building consensus around the code</li> <li>Formally verify the smart contracts</li> <li>Represent all entities by hashes (container images, git commits, bl\u043ebs, pull requests etc.);</li> <li>Allow anyone to add some metadata with signature to any entity;</li> <li>Allow anyone to decide whose metadata to trust;</li> <li>Build chain/tree of trust: dependencies can be organized using the same architecture, and containers built</li> </ol>"},{"location":"#instruments-and-utilities","title":"Instruments and utilities","text":"<p>A variety of utility tools to assist with all the aspects of the solution are under active development. Explore the tools available now to get started with GOSH:</p> <ul> <li>create and manage your on-chain repositories through GOSH Web or directly in the Docker Extension</li> <li>work with on-chain repository as if you use a regular git repository with Git Remote Helper</li> </ul>"},{"location":"links/","title":"Links","text":"<p>GOSH website</p> <p>GOSH Web App</p> <p>GOSH Blockchain Explorer</p> <p>GOSH repository</p>"},{"location":"on-chain-architecture/gosh-smart-contracts/","title":"GOSH smart contracts","text":"<p>GOSH is open-source and freely available on GitHub and, obviously, on GOSH.</p> <p>GOSH consists of the following contracts (latest version):</p> <ul> <li>VersionController - contract version manager</li> <li>SystemContract - main contract for a specific version</li> <li>Profile - User Profile \u0441ontract</li> <li>ProfileIndex - Contract for each user's public key</li> <li>ProfileDao - Dao Profile \u0441ontract</li> <li>GOSHWallet - GOSH user wallet, used for all user interactions with GOSH</li> <li>GOSHDAO - contract storing organization object</li> <li>Repository - contract storing repository object</li> <li>Commit - contract storing commit object</li> <li>Tree - contract storing tree object</li> <li>Diff - contract storing diff object</li> <li>Snapshot - contract storing snapshot object</li> <li>Tag - contract storing tag commit</li> <li>DaoTag - contract storing DAO tags</li> <li>RepoTagGosh - contract storing Repo tags</li> <li>Task - contract storing task object</li> <li>Topic - contract storing the description of the object </li> </ul>"},{"location":"on-chain-architecture/gosh-wallet/","title":"GOSH Wallet","text":"<p>GOSH exists on-chain as a system of interconnected smart contracts. Every repository, every file and commit are smart contracts, where data is written to the blockchain.</p> <p>Writing data to the blockchain requires cryptographic signatures and fees.</p> <p>For this reason every GOSH user needs to have a wallet and a pair of cryptographic keys.</p> <p>GOSH wallets are specially written to facilitate open-source development - following certain rules  the GOSH blockchain giver will fund all actions in an open-source repository, and development will be free.</p> <p>Refer to GOSH Web or Docker Extension sections to find out how to create your wallet and get started with GOSH, depending on where you're coming to GOSH from.</p>"},{"location":"on-chain-architecture/organizations-gosh-dao-and-smv/","title":"Organizations: GOSH DAO and SMV","text":""},{"location":"on-chain-architecture/organizations-gosh-dao-and-smv/#dao","title":"DAO","text":"<p>Every repository on GOSH is managed as a Decentralized Autonomous Organization - DAO \u2013 a tool that allows every developer to build on GOSH in a way that is decentralized, secure, and scalable.</p> <p>Every organization has, as a minimum, one member who creates and manages repositories. However, once more than one user is added to a DAO, it is then governed through decentralized management mechanisms.</p> <p>Your can configure your DAO easily.</p> <p>The main of these mechanisms is voting. Any action in a DAO requires a vote and is created through a proposals. For example, a user may propose to commit of file into a repository, and a soft-majority vote (SMV) of all other DAO members may be required to approve it. Branches could be locked to require any changes to them to be voted on by DAO SMV.</p>"},{"location":"on-chain-architecture/organizations-gosh-dao-and-smv/#soft-majority-voting","title":"Soft Majority Voting","text":"<p>Soft Majority Voting, or SMV for short, is a voting mechanism designed for transparency and optional participation.</p> <p>The outcome of an SMV vote is decided by the difference between the number of votes for, and the number of votes against a proposal. If nobody objects, a minimum threshold of approving votes is required for the proposal to pass.</p> <p>If everyone votes either for or against a proposal, 50% + 1 vote is required for the proposal to pass.</p> <p>If the only votes given are for the proposal, and no one votes against, 10% approving votes are enough for the proposal to pass.</p> <p>Everything in between these two extremes is a linear dependency between the percentage of votes against and percentage of votes for required to pass the proposal.</p> <p>For important decisions a more strict super majority approval criteria may be set up.</p> <p></p> <p>All SMV proposals have a set deadline. When it is reached, accumulated votes are counted, the decision is made, and the proposal completes.</p> <p>If however a majority of 50% + 1 vote is achieved early, the proposal completes immediately.</p>"},{"location":"on-chain-architecture/organizations-gosh-dao-and-smv/#smv-in-gosh","title":"SMV in GOSH","text":"<p>In GOSH one vote is one token.</p>"},{"location":"on-chain-architecture/organizations-gosh-dao-and-smv/#tokens-and-karma","title":"Tokens and Karma","text":"<p>The total supply of tokens is set when a DAO is created.</p> <p>A DAO's first user automatically gets 20 DAO tokens and 20 Karma.</p> <p>Karma is the amount of tokens (upper limit) within which a DAO member can vote.</p> <p>Karma is either granted by a DAO decision upon member acceptance or earned through repository contribution. This determines the reputation of the DAO member. The Karma can be changed only by voting.</p> <p>See here for more information.</p>"},{"location":"on-chain-architecture/organizations-gosh-dao-and-smv/#voting","title":"Voting","text":"<p>For a proposal in GOSH to pass early several participants need to vote for it with 50% of the Global Karma Count of the DAO + 1 token.</p> <p>Global Karma Count is the total amount of Karma calculated by summing up the Karma of all DAO members at the time of the proposal creation.</p> <p>If no one objects to a proposal for the duration of its voting period, 10% f the Global Karma Count is enough, but the proposal will only complete at the end of the voting period.</p> <p>If votes are split, and neither side achieves 50% + 1 token early, the proposal completes at the end of the voting period and the result is calculated according to the diagram above.</p>"},{"location":"working-with-gosh/build-and-sign-images/","title":"Build and Sign Images","text":"<p>With the Help of a custom Buildkit, you can build your Docker images directly from GOSH, and sign them so they can be verified by the GOSH docker extension.</p> <p>Instead of a dockerfile, this Buildkit uses a special goshfile to ensure code is taken from GOSH.</p>"},{"location":"working-with-gosh/build-and-sign-images/#how-to-build-from-gosh","title":"How to build from GOSH","text":""},{"location":"working-with-gosh/build-and-sign-images/#1-setup-environment-variables-with-your-wallet","title":"1. Setup environment variables with your wallet","text":"<pre><code>export WALLET=...\nexport WALLET_PUBLIC=...\nexport WALLET_SECRET=...\n</code></pre> <p>You received these when creating your account in GOSH Web or Docker Extension.</p>"},{"location":"working-with-gosh/build-and-sign-images/#2-create-goshfileyaml-this-specification-is-a-work-in-progress-and-subject-to-change","title":"2. Create <code>goshfile.yaml</code> (this specification is a work in progress and subject to change)","text":"<pre><code># syntax=teamgosh/goshfile\n\napiVersion: 1\nimage: bash:latest\nsteps:\n  - name: print date\n    run:\n      command: [\"/usr/local/bin/bash\"]\n      args:\n        - -c\n        - &gt;-\n          (date +'%s %H:%M:%S %Z'; echo \"Hi there\") | tee /message.txt\n</code></pre>"},{"location":"working-with-gosh/build-and-sign-images/#3-now-to-build-an-image","title":"3. Now to build an image","text":"<pre><code>TARGET_IMAGE=\"my-target-super-image\"\n\ndocker buildx build \\\n    --push \\\n    --label WALLET_PUBLIC=\"$WALLET_PUBLIC\" \\\n    -f goshfile.yaml \\\n    -t \"$TARGET_IMAGE\" \\\n    .\n\n## OR more complicated way via buildctl directly\n# # run buildkitd containered\n# docker run -d --name buildkitd --privileged moby/buildkit:latest\n# # build image\n# buildctl --addr=docker-container://buildkitd build \\\n#         --frontend gateway.v0 \\\n#         --local dockerfile=. \\\n#         --local context=. \\\n#         --opt source=teamgosh/goshfile \\\n#         --opt filename=goshfile.yaml \\\n#         --opt wallet_public=\"$WALLET_PUBLIC\" \\\n#         --output type=image,name=\"$TARGET_IMAGE\",push=true\n</code></pre> <p>Here we parameterize the image build process with our wallet credentials.</p>"},{"location":"working-with-gosh/build-and-sign-images/#4-sign-the-image-wip-will-be-part-of-build-image-process","title":"4. Sign the image (WIP: will be part of build image process)","text":"<pre><code>docker pull $TARGET_IMAGE # buildkit push image directly to the registry and it doesn't persist locally\n\n# my-target-super-image's sha256\nTARGET_IMAGE_SHA=`docker inspect --format='{{index (split (index .RepoDigests 0) \"@\") 1}}' $TARGET_IMAGE`\n\ndocker run --rm teamgosh/sign-cli sign \\\n    -n &lt;blockchain_network e.g. https://gra01.net.everos.dev&gt; \\\n    -g $WALLET \\\n    -s $WALLET_SECRET \\\n    $WALLET_SECRET \\  # signer secret can be different\n    $TARGET_IMAGE_SHA\n</code></pre> <p>Now you have signed the image.</p>"},{"location":"working-with-gosh/build-and-sign-images/#you-can-check-the-image-signature-with-your-public-key","title":"You can check the image signature with your public key","text":"<pre><code>TARGET_IMAGE=\"my-target-super-image\"\n# or IMAGE_NAME=\"my_repo:5000/library/my-target-super-image:latest@sha256:...\"\n\nWALLET_PUBLIC=$(docker inspect --format='{{.Config.Labels.WALLET_PUBLIC}}' $TARGET_IMAGE)\n\nTARGET_IMAGE_SHA=$(docker inspect --format='{{index (split (index .RepoDigests 0) \"@\") 1}}' $TARGET_IMAGE)\n\ndocker run --rm teamgosh/sign-cli check \\\n    -n &lt;blockchain_network e.g. https://gra01.net.everos.dev&gt; \\\n    $WALLET_PUBLIC \\\n    $TARGET_IMAGE_SHA\n</code></pre> <p>NOTE: Anyone who has the image can validate it. The image has label WALLET_PUBLIC and image's sha256 also publicly available.</p> <p>Additionally, signer tool can deploy a proof contract to GOSH blockchain that will be publicly available to all wanting to verify the image they pull from dockerhub.</p>"},{"location":"working-with-gosh/build-and-sign-images/#examples","title":"Examples","text":"<p>Publisher example</p>"},{"location":"working-with-gosh/docker-extension/","title":"Docker Extension","text":"<p>GOSH Docker Extension implements GOSH repository management and image verification as the newest feature of Docker - a Docker Extension.</p> <p>You will be able to create your GOSH account and Decentralized Autonomous Organization (DAO), set up and manage repositories through a graphical interface directly in Docker Desktop. Repositories stored in GOSH can then be interacted with like any regular remote repository, with a few small configurations to git, making decentralized code management easily available to anyone.</p> <p>Images built directly from code stored in GOSH can be verified as GOSH-sourced in the Docker Extension, ensuring security of the software supply chain. You will always know what code specifically is running in your containers, and that none of it was tampered with during build.</p>"},{"location":"working-with-gosh/docker-extension/#installation","title":"Installation","text":"<p>Get the latest Docker Desktop (4.8.0 or later), which supports extensions.</p> <p>Launch the Desktop, go to the Extensions section, and click Add Extensions.</p> <p></p> <p>Select and install Gosh extension on the marketplace.</p>"},{"location":"working-with-gosh/docker-extension/#create-account","title":"Create account","text":"<p>Open the Gosh verified images extension in Docker Desktop.  If you have a Gosh account, then enter your own one seed phrase, if not, you can create it by clicking on the link app.gosh.sh.</p> <p></p> <p>To get started with GOSH, you need an active Github-account.</p> <p>Click Create account with Github.</p> <p></p> <p>After click Authorize gosh-sh</p> <p></p> <p>In the list of organizations received from Github, click on the organization</p> <p></p> <p>and select repositories for upload into Gosh</p> <p></p> <p>Do this for each organization for which you want to upload repositories to Gosh.</p> <p>Danger</p> <p>After registering on GOSH you will not be able to return to this step in this release.</p> <p>This will be available later</p> <p>Info</p> <p>If you want other GOSH users to be able to find you by your email, give permission.</p> <p>Then click Upload</p> <p></p> <p>\u200bIf you are familiar with blockchain, you know what to do with a seed phrase.</p> <p>If you're new to blockchain, all you need to know, is that this is the key to your account and all your assets on GOSH. Your public key, which can identify you on the blockchain and the secret key you'll use to sign your actions can always be calculated from your seed phrase.</p> <p>To create the GOSH-account, the seed phrase will be generated for you.</p> <p></p> <p>Danger</p> <p>Write your seed phrase down and store it somewhere safe, and never share it with anyone. Avoid storing it in plain text or screenshots, or any other non-secure way. If you lose it, you lose access to your assets. Anyone who gets it, gets full access to your assets.</p> <p>Info</p> <p>Your seed phrase will be used to log into GOSH.</p> <p>Once you have written down your seed phrase, click Continue.</p> <p>Then choose a short nickname or create a new one and click Create account.</p> <p>Warning</p> <p>The Usernames must contain only Latin letters, numbers, hyphen, underscore character <code>( a...z, 0...9, -, _ )</code></p> <p></p> <p>Info</p> <p>When the repositories are uploaded, a notification will be sent to your email.</p> <p>Follow the link in the email.</p> <p></p> <p>To log into Gosh open the Gosh verified images extension in Docker Desktop and enter the saved seed phrase and click Sign in.</p> <p></p> <p>GOSH will ask you to set up a PIN code:</p> <p></p> <p>And unlock with PIN code.</p> <p>Once done, you will be logged into GOSH.</p> <p>Info</p> <p>The GOSH DAO Bot will be a member of your organization. In the future, it will track changes in your repositories on Github and synchronize them with Gosh.</p> <p>The Bot can be removed from the DAO members by voting. But then there will be no automatic synchronization of repositories in GOSH if they have been changed in Github.</p>"},{"location":"working-with-gosh/docker-extension/#create-organization","title":"Create Organization","text":"<p>The Organizations page will open after your account is created.</p> <p>Click New organization button in the Organizations section.</p> <p></p> <p>\u200bInput Organization name and members.</p> <p>Warning</p> <p>The Organizations name must contain only Latin letters, numbers, hyphen, underscore character <code>( a...z, 0...9, -, _ )</code></p> <p>The first mandatory member is the creator, identified by their username.</p> <p>The second member is the GOSH DAO Bot. It will synchronize repositories with github on Gosh.</p> <p>Any other members can be added at creation - just enter the username of each member in new line.</p> <p>At any later time the list of members can be expanded by voting.</p> <p>Click Create organization.</p> <p></p> <p>\u200bOnce created, your organization will appear in the organization list. Click on it to continue.</p> <p></p>"},{"location":"working-with-gosh/docker-extension/#create-repository","title":"\u200bCreate Repository","text":"<p>To create a repository in your organization click Create in the Repositories section.</p> <p></p> <p>Enter repository name and click Create repository.</p> <p>Warning</p> <p>The repository name must contain only Latin letters, numbers, hyphen, underscore character <code>( a...z, 0...9, -, _ )</code></p> <p></p>"},{"location":"working-with-gosh/docker-extension/#create-branch","title":"Create Branch","text":"<p>Repository is created with default main branch. To create another branch, click on the branches counter.</p> <p></p> <p>Select the branch to be forked, enter new branch name, and click\u200b Create branch.</p> <p>Warning</p> <p>The branch name must contain only Latin letters, numbers, hyphen, underscore character <code>( a...z, 0...9, -, _ )</code></p> <p></p> <p>Once the branch is created, it will appear in the branches list.</p> <p></p> <p>Switch to it via drop down list.</p> <p></p>"},{"location":"working-with-gosh/docker-extension/#create-file","title":"Create File","text":"<p>To create file, click Add file button.</p> <p></p> <p>Enter file contents and name. MD syntax is supported for preview.</p> <p></p> <p>Once done, scroll down to Commit data, enter commit info and click Commit changes button.</p> <p></p> <p>Commit status will be displayed below.</p> <p></p> <p>If the branch you are working in requires no vote to commit to, the changes will be commited immediately/ Otherwise a DAO vote will be initiated.</p>"},{"location":"working-with-gosh/docker-extension/#create-pull-request","title":"Create Pull Request","text":"<p>Click on the Pull requests tab and set up the pull request: what branch to merge from and to.</p> <p></p> <p>View the diff, scroll down to Commit data, enter details and click Commit changes.</p> <p></p> <p>Info</p> <p>When merging into the main branch, and in some other cases (depending on DAO setup), a DAO proposal will be initiated by trying to commit.</p> <p>Organization Tokens have to be sent to the DAO Soft Majority Vote contract to start a proposal for DAO members to vote on.</p>"},{"location":"working-with-gosh/docker-extension/#voting-in-smv-soft-majority-vote","title":"Voting in SMV (Soft Majority Vote)","text":"<p>Actions that require a DAO vote, such as merging into main, are performed by creating a proposal.</p> <p>To create a proposal, or to vote for a proposal someone else created, some of your tokens need to be allocated to SMV (once the proposal is completed), you can get them back.</p> <p>For example, to merge into main, create a pull request from some other branch. A proposal will be generated and will appear on the Events page.</p> <p></p> <p>Open the proposal and review the contents.</p> <p></p> <p>The voting period is indicated on the proposal page. This is the time allotted for voting. Unless a decisive majority of &gt;50% is achieved early, votes will be counted at the end of this period.</p> <p>Voting statistics are located under the status Running. The green and red counters indicate how many tokens have been used at the moment to vote for and against the proposal.</p> <p>The green indicator in the top right corner means that the SMV smart contracts are not currently processing any new votes. It turns red when the SMV contracts are busy.</p> <p>Once you have made a decision, input the amount of tokens, select Approve or Reject and click Vote for proposal. Vote registration can take a bit of time.</p> <p>Info</p> <p>As per the rules of Soft Majority Voting, to have a proposal approved early, you need at least 50% of the total supply of tokens in the repository + 1 token used to vote for the proposal.</p> <p>For example, in a repository with two members, where the total supply of tokens is 200, 101 token needs to be used to instantly approve a proposal. Thus with every member holding 100 tokens a proposal can never be instantly completed without the participation of members other than the proposal's author.</p> <p>On the other hand, so as not to depend on all members of an organization to vote, soft majority vote will complete with an approval at the end of the voting period, if 10% of the total token supply were used to vote for, and no one voted against.</p> <p>The more tokens are sent against the proposal, the higher the approving amount needs to be (up to 50% of the total supply  + 1 token) for the proposal to pass.</p> <p>Other members of the Organization, who have transferred their tokens to SMV, will be able to vote for the proposal on this page in their own accounts.</p> <p>Info</p> <p>Currently, even in organizations with a single member, voting still takes place when a proposal is created. 51 tokens are needed to approve a proposal in such a repository.</p> <p>Once a majority has been reached early, or the voting period ended and the soft majority vote result was decided, the proposal completes and the proposed action is performed.</p> <p></p>"},{"location":"working-with-gosh/docker-extension/#view-public-key","title":"View Public Key","text":"<p>A user needs to know their public key, for example, when joining an organization.</p> <p>To view your public key go to the main page of your account and click Settings.</p> <p>Danger</p> <p>Avoid storing your private key and seed phrase in plain text or screenshots, or any other non-secure way. If you lose it, you lose access to your assets. Anyone who gets it, gets full access to your assets.</p> <p></p>"},{"location":"working-with-gosh/docker-extension/#add-members-to-organization","title":"Add Members to Organization","text":"<p>Go to Organization Settings to the Members tab to manage your organization.</p> <p>To add member enter the username of each candidate from a new line and click Add members button.</p> <p></p>"},{"location":"working-with-gosh/docker-extension/#whats-next","title":"What's next?","text":"<p>Set up Git Remote Helper and continue working with your repository.</p> <p>You'll need your wallet credentials. Go to the main page of your account and click Settings. Scroll down and copy them.</p> <p></p> <p>To view the command to clone your repo, click the Clone button on your repo page.</p> <p></p>"},{"location":"working-with-gosh/docker-extension/#update-docker-extension","title":"Update Docker Extension","text":"<p>When you need to update the Gosh verified images extension in Docker Desktop, you will see an orange indicator.</p> <p>To update the extension, go to the menu and select Manage </p> <p>\u0412 \u043e\u0442\u043a\u0440\u044b\u0432\u0448\u0435\u0439\u0441\u044f \u0432\u043a\u043b\u0430\u0434\u043a\u0435 \u043d\u0430\u0436\u043c\u0438\u0442\u0435 Update</p> <p></p> <p>After downloading the update, click Open</p> <p></p>"},{"location":"working-with-gosh/git-remote-helper/","title":"Git Remote Helper","text":"<p>Git Remote Helper (this is a standard mechanism for working with non-standard code storages) is a <code>git-client helper</code> to interact with remote repositories hosted on the GOSH blockchain. </p>"},{"location":"working-with-gosh/git-remote-helper/#installation","title":"Installation","text":""},{"location":"working-with-gosh/git-remote-helper/#install-helper-using-the-installation-script","title":"Install helper using the installation script","text":"<p>If you have macOS or Linux, you can use this installation method.</p> <pre><code>wget -O - https://raw.githubusercontent.com/gosh-sh/gosh/dev/install.sh | bash -s\n</code></pre> <p>If you have Windows, you can use the installation methods below.</p> <p>Checking the installation results.</p>"},{"location":"working-with-gosh/git-remote-helper/#install-helper-from-binary-releases","title":"Install helper from binary releases","text":"<ol> <li> <p>Follow the <code>link</code> and download the version of the Git Remote Helper for the required operating system (macOS, Linux, Windows).</p> </li> <li> <p>Extract files from tar-file</p> <p>(e.g. for Linux x64):</p> <p><code>tar xvf git-remote-gosh-linux-amd64.tar</code></p> </li> <li> <p>Move binary files to any searchable path</p> <p>(e.g. /usr/local/bin):</p> <p><code>mv git-remote-gosh /usr/local/bin</code></p> <p><code>mv git-remote-gosh_v?_0_0 /usr/local/bin</code></p> <p>and move dispatcher.ini to ~/.gosh/ folder:</p> <p><code>mkdir ~/.gosh || mv dispatcher.ini ~/.gosh/</code></p> </li> </ol> <p>Checking the installation results.</p>"},{"location":"working-with-gosh/git-remote-helper/#install-helper-from-source","title":"Install helper from source","text":"<ol> <li> <p>Prerequisites:</p> <ul> <li>Rust v1.66+</li> <li>Protobuf Compiler</li> <li><code>git</code></li> <li><code>make</code></li> <li><code>gcc</code></li> <li> <p><code>openssl</code></p> <p>Note</p> <p>For Windows users:</p> <p>make sure that the appropriate Perl version is installed for your build environment.</p> </li> </ul> </li> <li> <p>Clone <code>gosh</code> repository.</p> </li> <li> <p>Go to the <code>gosh</code> directory</p> <p><code>cd gosh</code></p> <p>Then build all the necessary components:</p> <p><code>cd v1_x/git-remote-gosh &amp;&amp; make install</code></p> <p><code>cd v2_x/git-remote-gosh &amp;&amp; make install</code></p> <p><code>cd v3_x/git-remote-gosh &amp;&amp; make install</code></p> <p><code>cd v4_x/git-remote-gosh &amp;&amp; make install</code></p> <p><code>cd gosh-dispatcher &amp;&amp; make install</code></p> <p>Info</p> <p>After building all the components, the finished binary files will be located in the <code>~/.cargo/bin</code> directory.</p> <p>You need to create a configuration file for the Git Remote Helper: <code>~/.gosh/dispatcher.ini</code></p> <p>with the following content:</p> <p><code>git-remote-gosh_v1_0_0</code></p> <p><code>git-remote-gosh_v2_0_0</code></p> <p><code>git-remote-gosh_v3_0_0</code></p> <p><code>git-remote-gosh_v4_0_0</code></p> </li> </ol>"},{"location":"working-with-gosh/git-remote-helper/#verifying-the-installation-resulte","title":"Verifying the installation resulte","text":"<p>You can check the correctness of the configuration file by running the command:</p> <pre><code>git-remote-gosh dispatcher_ini\n</code></pre> <p>As a result, you will see the following:</p> <p></p> <p>Run the following command to make sure it's available:</p> <pre><code>which git-remote-gosh\n</code></pre> <p>If the Git Remote Helper is not available, then add path with <code>git-remote-gosh</code></p> <p>for availability via <code>$PATH</code>:</p> <pre><code>export PATH=\"~/.cargo/bin:$PATH\"\n</code></pre>"},{"location":"working-with-gosh/git-remote-helper/#setup-user-account","title":"Setup user account","text":"<p>When creating your account in GOSH Web or Docker extension you received a GOSH wallet address and keys.</p> <p>To be able to push to Gosh repositories, you need to set up these credentials for Git Remote Helper.</p> <p>The Git Remote Helper expects that the wallet credentials are in the file <code>~/.gosh/config.json</code> or in the file specified in the environment variable <code>GOSH_CONFIG_PATH</code>,</p> <p>for example:</p> <pre><code>{\n  \"primary-network\": \"mainnet\",\n  \"networks\": {\n    \"mainnet\": {\n      \"user-wallet\": {\n        \"profile\": \"USERNAME\",\n        \"pubkey\": \"655b120c996b4f69c686cb3b769fbdfa0141006ce6a88dc012bf323c30265924\",\n        \"secret\": \"6bdc38c0ecd6f74399f6b8ff2486f0e2abb32fca712caf3e4a47ef4a2634c4e8\"\n      },\n      \"endpoints\": [\n        \"https://bhs01.network.gosh.sh\",\n        \"https://eri01.network.gosh.sh\",\n        \"https://gra01.network.gosh.sh\"\n      ]\n    }\n  }\n}\n</code></pre>"},{"location":"working-with-gosh/git-remote-helper/#use-gosh-as-remote","title":"Use GOSH as remote","text":"<p>For correct usage of the helper you should refer to remote in the following form:</p> <pre><code>gosh://SYSTEM_CONTRACT_ADDRESS/DAO_NAME/REPO_NAME\n</code></pre>"},{"location":"working-with-gosh/git-remote-helper/#set-remote-for-existing-local-repository","title":"Set remote for existing local repository","text":"<p>\u0421opy the URL to configure the remote from the web interface, after creating a repository on GOSH.</p> <p></p> <p>Info</p> <p>The address of the System Contract depends from the GOSH version of contracts.</p> <p>for example setup for version 3:</p> <pre><code>git remote add origin gosh://0:8b1cbcd8b08a6c384e0db0d3513898d36203fced3e141a7f6b99cc580738fc22/my-DAO/my-repo\n</code></pre>"},{"location":"working-with-gosh/git-remote-helper/#clone-repository","title":"Clone repository","text":"<pre><code>git clone gosh://0:8b1cbcd8b08a6c384e0db0d3513898d36203fced3e141a7f6b99cc580738fc22/my-DAO/my-repo\n</code></pre>"},{"location":"working-with-gosh/git-remote-helper/#ever-sdk-protocol","title":"Ever SDK protocol","text":"<p>By default, the SDK in Git Remote Helper uses the WebSocket protocol. If for some reason this does not suit you (for example, you are using Alpine Linux), then set the environment variable <code>GOSH_PROTO</code> to <code>http</code></p> <pre><code>export GOSH_PROTO=http\n</code></pre>"},{"location":"working-with-gosh/gosh-web/","title":"GOSH Web","text":"<p>GOSH Web is also a good way to get started with GOSH.</p> <p>It implements GOSH repository management as a simple web interface.</p> <p>You will be able to create your GOSH account and Decentralized Autonomous Organization (DAO), set up and manage repositories. Repositories stored in GOSH can then be interacted with like any regular remote repository, with a few small configurations to git, making decentralized code management easily available to anyone.</p>"},{"location":"working-with-gosh/gosh-web/#working-with-account","title":"Working with account","text":""},{"location":"working-with-gosh/gosh-web/#create-account","title":"Create account","text":"<p>To get started with GOSH, you need an active Github-account.</p> <p>Click Create account with Github to start registering on GOSH</p> <p></p> <p>After click Authorize gosh-sh </p> <p></p> <p>Info</p> <p>The special GOSH DAO Bot will help with registration in Gosh. It will deploy your DAO and upload your selected repositories to GOSH.</p> <p>In the list of organizations received from Github, click on the organization</p> <p></p> <p>and select repositories for upload into Gosh.</p> <p></p> <p>Do this for each organization for which you want to upload repositories to Gosh.</p> <p>Danger</p> <p>After registering on GOSH you will not be able to return to this step in this release.</p> <p>This will be available later</p> <p>Info</p> <p>If you want other GOSH users to be able to find you by your email, give permission.</p> <p>Then click Upload</p> <p></p> <p>\u200bIf you are familiar with blockchain, you know what to do with a seed phrase.</p> <p>If you're new to blockchain, all you need to know, is that this is the key to your account and all your assets on GOSH. Your public key, which can identify you on the blockchain and the secret key you'll use to sign your actions can always be calculated from your seed phrase.</p> <p>To create the GOSH-account, the seed phrase will be generated for you. If you already have the GOSH-account, click Clear and enter your own one seed phrase.</p> <p>Info</p> <p>Your seed phrase will be used to log into GOSH.</p> <p>Danger</p> <p>Write your seed phrase down and store it somewhere safe, and never share it with anyone. Avoid storing it in plain text or screenshots, or any other non-secure way. If you lose it, you lose access to your assets. Anyone who gets it, gets full access to your assets.</p> <p>Once you have written down your seed phrase, click Continue.</p> <p></p> <p>Then choose your username in GOSH. This is your unique cryptographic identifier in Gosh. </p> <p>Danger</p> <p>Please note that after creating your username it will be impossible to change it in the future.</p> <p>if your username is already taken, please choose another one.</p> <p>Warning</p> <p>The username must contain only Latin letters, numbers, hyphen, underscore character <code>( a...z, 0...9, -, _ )</code></p> <p>And click Create account.</p> <p></p> <p>When entering the GOSH will ask you to set up a PIN code:</p> <p>Info</p> <p>Set a new PIN code for each new session.</p> <p></p> <p>And unlock with PIN code.</p> <p>Warning</p> <p>If the name of the organization or repository already exists, you will receive the message. Change the name, click save changes and confirm the action with a pin code.</p> <p></p> <p>The Organizations page will open after your account is created.</p> <p></p> <p>Info</p> <p>When the repositories are uploaded, a notification will be sent to your email.</p> <p>Follow the link in the letter.</p> <p></p> <p>Enter the saved seed phrase and click Sign in.</p> <p></p> <p>Also set up a PIN code and unlock with PIN code.</p>"},{"location":"working-with-gosh/gosh-web/#view-public-key","title":"View Public Key","text":"<p>A user needs to know their public key, for example, when joining an organization.</p> <p>To view your public key go to the main page of your account and click Settings.</p> <p>Danger</p> <p>Avoid storing your private key and seed phrase in plain text or screenshots, or any other non-secure way. If you lose it, you lose access to your assets. Anyone who gets it, gets full access to your assets.</p> <p></p>"},{"location":"working-with-gosh/gosh-web/#working-with-dao","title":"Working with DAO","text":"<p>\u200bOnce created, your organization will appear in the organization list. Click on it to continue.</p> <p></p> <p>The first mandatory member is the GOSH DAO Bot. It will synchronize repositories with github on Gosh.</p> <p>The second member is the creator, identified by their username.</p> <p>At any later time the list of members can be expanded by voting.</p>"},{"location":"working-with-gosh/gosh-web/#create-organization-dao","title":"Create Organization (DAO)","text":"<p>Click \u0421reate new DAO button in the Organizations section.</p> <p></p> <p>On the DAO settings page that opens, input:</p> <ul> <li> <p>Organization name</p> <p>Warning</p> <p>The Organizations name must contain only Latin letters, numbers, hyphen, underscore character <code>( a...z, 0...9, -, _ )</code></p> </li> <li> <p>Organization picture</p> <p>The icon will be generated automatically.</p> </li> <li> <p>Theme tags</p> <p>You can add up to 3 tags separated by spaces.  According to them, GOSH users will be able to find your DAO.</p> </li> <li> <p>Description</p> <p>A short description that can be seen on the DAO page under the heading.</p> <p>The extended description can be added to the Readme file into _index system repository from the Overview page after creating the DAO.</p> </li> <li> <p>Total supply</p> <p>You also need to enter the number of tokens that will be issued for this DAO.</p> <p>The maximum value of the total supply can be the number 2^128.</p> </li> <li> <p>Allow mint</p> <p>This is a permission to emission DAO tokens. It is enabled by default.</p> <p>In the future, it will be possible to disable the emission of DAO tokens through proposal and voting in the Settings section.</p> <p>Warning</p> <p>If you uncheck this option, the number of tokens issued for this DAO will be capped to the number entered during the initial setup</p> </li> </ul> <p>Click Create organization.</p> <p></p> <p>The DAO page will open after its creation.</p>"},{"location":"working-with-gosh/gosh-web/#overview-of-the-dao","title":"Overview of the DAO","text":"<p>All information about your DAO and its activities will be displayed here.</p> <p></p> <p>Information about DAO assets is displayed on the right.</p> <ul> <li> <p>DAO total supply - the total issue of tokens of this DAO.</p> </li> <li> <p>DAO reserve - unallocated tokens.</p> <p>Push on the SEND button, you will create an proposal to transfer tokens from the DAO reserve to the DAO member. </p> <p>Push on the Mint button, you will create an proposal to issue additional tokens for this DAO. </p> </li> </ul> <p></p> <ul> <li> <p>Your wallet balance - the amount of tokens you have in this DAO.</p> <p>Info</p> <p>When creating a DAO, 20 tokens from the DAO reserve will be issued to your wallet.</p> <p>Push on the SEND button, you will to transfer your tokens to the DAO reserve or to the GOSH user.</p> </li> </ul> <ul> <li> <p>Karma - the amount of tokens (upper limit) within which a DAO member can vote. </p> <p>It is assigned when accepted as a member of the DAO. This determines the reputation of the DAO member. The Karma can be changed only by voting.</p> </li> </ul> <p></p> <ul> <li> <p>Members - total number of DAO members.</p> <p>From here you can also send an invitation to become a member of the DAO. </p> </li> </ul> <p></p> <ul> <li>Recent proposals</li> </ul> <p>Information and status of the recent proposals will be displayed  in this section.  Click on the name of the proposal you can go to the event page and vote.</p> <p></p> <ul> <li>In the Repositories section, you can quickly find or create a repository.</li> </ul> <p></p> <ul> <li>DAO system repository</li> </ul> <p>The _index is a DAO system repository that is created automatically.</p> <p>Info</p> <p>After creating the DAO, it will already contain  a text file with a brief description of your DAO, which you added in the settings earlier.</p> <p>To add a README for your DAO, go to the _index repository or follow the link in this section.</p> <p></p> <p>Make sure you are in the main branch and click Add file button.</p> <p></p> <p>Enter file contents and name.</p> <p></p> <p>You can use Preview if needed. MD syntax is supported for preview.</p> <p>After scroll down and enter commit info:</p> <ul> <li> <p>Commit description - you can add a description of your commit;</p> </li> <li> <p>Commit tags - this is a mutable pointer of the commit. You can add the tag to quickly go to this commit and see what has been done;</p> </li> </ul> <p></p> <ul> <li>Select a task - if you want to attach your commit to the solution of the Task, then select the desired task from the list;</li> </ul> <p></p> <ul> <li>and add Assigners, Reviewers and Managers if necessary.</li> </ul> <p></p> <p>If a Task has been selected, check the Create proposal box.</p> <p>And click Commit changes</p> <p></p> <p>After that a proposal to the pull request will be created.</p> <p></p> <p>When the proposal to the pull request is accepted, the description of the DAO will appear on the Overview tab.</p> <p></p>"},{"location":"working-with-gosh/gosh-web/#dao-set-up","title":"DAO Set up","text":"<p>You can continue with the initial setup the DAO in the Settings tab.</p> <p></p> <p>In the Token Setup section, you can create a proposal to ban the issue of tokens from this DAO by unchecking the box.</p> <p>Warning</p> <p>After the ban on the issue of DAO tokens, it will be impossible to allow the issue.</p> <p></p> <p>In the Proposal setup section you can enable/disable the option to view the voting results before it ends.</p> <p>And also allow or prohibit discussion when working with proposals.</p> <p></p> <p>In the Members setup section you can grant or deny external users the ability to request membership in this DAO.</p> <p></p> <p>Then add a comment on changing the settings for other members of the DAO and click Save changes and start proposal.</p> <p></p> <p>Info</p> <p>All settings and actions in the DAO will be performed the voting procedure.</p>"},{"location":"working-with-gosh/gosh-web/#upgrade","title":"Upgrade","text":"<p>When a new version of contracts is released in GOSH, the user needs to upgrade their contracts.</p> <p>The upgrade is initiated by the proposal.</p> <p>Info</p> <p>Complete all proposle before starting the upgrade. All uncompleted proposals will be rejected and will not be transferred to the upgraded version.</p> <p>You can see a message about the availability of a new version  and an invitation to update in the DAO.</p> <p>Depending on which version you currently have, choose the appropriate update method.</p> <ul> <li>From version 1 to version 2</li> </ul> <p></p> <p>You can go to the Upgrade section from the new version message or go to the Settings tab.</p> <p>Select the version you want to upgrade and click Create proposal for DAO upgrade:</p> <p></p> <p>You will be taken to the DAO page with events.</p> <p></p> <p>After the completion of voting for the proposal, the procedure for updating your DAO will begin.</p> <p>Then you need to update all the Repositories.</p> <p>To do this, go to their tab and click Get repositories</p> <p></p> <p>and then click Start repositories upgrade to create a proposal</p> <p></p> <p>On the DAO tab, vote for the proposal to create a repository</p> <p></p> <ul> <li>From version 2 to version 3</li> </ul> <p>Tasks were added in contracts version 2.</p> <p>Uninitialized Tasks will not be migrated to the new version.</p> <p>Warning</p> <p>Before starting the update make sure that there are commits in the Tasks.</p> <p>Go to the Settings tab or follow the link in the upgrade message.</p> <p></p> <p>Select the version you want to update.</p> <p></p> <ul> <li> <p>From version 1 to version 3</p> </li> <li> <p>From version 3 to version 4</p> </li> </ul>"},{"location":"working-with-gosh/gosh-web/#proposals-and-voting-in-smv-soft-majority-vote","title":"Proposals and voting in SMV (Soft Majority Vote)","text":"<p>Actions that require a DAO vote are performed by creating a proposal.</p> <p>Warning</p> <p>To create an proposal, you must have at least 20 tokens on your wallet balance.</p> <ul> <li>Create a pull request</li> <li>Add branch protection</li> <li>Remove branch protection</li> <li>Add DAO member</li> <li>Remove DAO member</li> <li>Upgrade DAO</li> <li>Delete task</li> <li>Create task</li> <li>Create repository</li> <li>Add voting tokens</li> <li>Add regular tokens</li> <li>Mint DAO tokens</li> <li>Add DAO tag</li> <li>Remove DAO tag</li> <li>Disable minting DAO tokens</li> <li>Change DAO member Karma</li> </ul> <ul> <li> <p>Multi proposal - includes several offers at once. </p> <p>For example: adding members to the DAO by another DAO member</p> </li> <li> <p>Add repository tag</p> </li> <li>Remove repository tag</li> <li>Update repository description</li> <li>Allow event discussions</li> <li>Show event progress</li> <li>Upgrade repository tags</li> <li>Ask DAO membership</li> </ul> <p>To vote for the proposal, some of your tokens must be be allocated to SMV (once the proposal is completed), you can get them back.</p> <p>Info</p> <p>You can vote for a proposal only once.</p> <p>For example, to merge into main, create a pull request from some other branch. A proposal will be generated and will appear on the DAO tab.</p> <p>Open the proposal and review the contents.</p> <p>The voting period is indicated on the proposal page. This is the time allotted for voting. </p> <p>Unless a decisive majority of &gt;50% Global Karma Count is achieved early, votes will be counted at the end of this period.</p> <p>Info</p> <p>Global Karma Count is the total amount of Karma calculated by summing up the Karma of all DAO members at the time of the proposal creation.</p> <p>Once you have made a decision, input the amount of tokens, select Approve or Reject and click Vote for proposal. Vote registration can take a bit of time.</p> <p>Info</p> <p>As per the rules of Soft Majority Voting, to have a proposal approved early, you need at least 50% of the total supply of tokens in the repository + 1 token used to vote for the proposal.</p> <p>For example, in a repository with two members, where the total supply of tokens is 200, 101 token needs to be used to instantly approve a proposal. Thus with every member holding 100 tokens a proposal can never be instantly completed without the participation of members other than the proposal's author.</p> <p>On the other hand, so as not to depend on all members of an organization to vote, soft majority vote will complete with an approval at the end of the voting period, if 10% of the total token supply were used to vote for, and no one voted against.</p> <p>The more tokens are sent against the proposal, the higher the approving amount needs to be (up to 50% of the total supply  + 1 token) for the proposal to pass.</p> <p>Other members of the Organization, who have transferred their tokens to SMV, will be able to vote for the proposal on this page in their own accounts.</p> <p>Info</p> <p>Currently, even in organizations with a single member, voting still takes place when a proposal is created. 51 tokens are needed to approve a proposal in such a repository.</p> <p>Once a majority has been reached early, or the voting period ended and the soft majority vote result was decided, the proposal completes and the proposed action is performed.</p>"},{"location":"working-with-gosh/gosh-web/#working-with-dao-members","title":"Working with DAO Members","text":""},{"location":"working-with-gosh/gosh-web/#adding-members-to-dao","title":"Adding Members to DAO","text":"<p>Membership in the DAO can be obtained in several ways.</p> <p>The user can be invited to the DAO using a special form or by an invitation link.</p> <p>Also, the user can independently create a membership request in the DAO.</p> <p>Info</p> <p>Adding a member to the DAO is possible only through an proposal.</p> <p>Depending on the chosen path, tokens and Karma will be distributed immediately after acceptance proposal, or additional proposals will need to be created for this.</p>"},{"location":"working-with-gosh/gosh-web/#adding-by-gosh-username-or-e-mail","title":"Adding by GOSH username or e-mail","text":"<p>A DAO member can create a proposle to add GOSH user into the DAO.</p> <p>To do this, go to the tab Members in the section Invite user to DAO.</p> <ul> <li> <p>If you know the GOSH username, then enter it.</p> </li> <li> <p>If you don't know the name or the user doesn't have a GOSH account yet, enter their email address.</p> </li> </ul> <p>Info</p> <p>The email address will change to the GOSH username if the user has given permission during registration so that it can be found by email.</p> <p>Offer the amount of karma for him and please comment your decision.</p> <p>Info</p> <p>You can send an invitation proposal to several users at once.</p> <p>And click Send invite.</p> <p></p> <p>Info</p> <p>At the same time, a multi proposal will be created to add DAO members and provide voting tokens.</p> <p>Go to the DAO tab and select the desired event for voting.</p> <p></p>"},{"location":"working-with-gosh/gosh-web/#invite-by-link","title":"Invite by link","text":"<p>You can invite a user to the DAO by generating an invitation link for them.</p> <p>Warning</p> <p>Enable \"Allow external users to request DAO membership\" option in DAO settings to enable invites by email/link.</p> <p>To do this, on the tab Members in the section Invite user to DAO click on Get one-time invitation link.</p> <p>Info</p> <p>The link to the invitation can only be used one time.</p> <p></p> <p>All active invitation links will be displayed in the section on the right.</p> <p>When the invited user creates a membership proposle in the DAO, the link entry disappears.</p> <p>You can also deactivate the link click on the Revoke.</p> <p></p> <p>When the user clicks the link, they will be able to create an account or log into GOSH.</p> <p></p> <p>Then input a short nickname or and click Create account and continue.</p> <p></p> <p>Enter a short comment who are you and click Accept invitation.</p> <p></p> <p>On the event page that opens, you can find a request for your acceptance as a member of the DAO.</p> <p>Click on it you can track the results of voting and discussions.</p> <p></p> <p>After the proposal is accepted, its status will change to Accepted</p> <p></p> <p>Info</p> <p>You will be able to request voting tokens after you are accepted into the DAO by creating your proposal.</p>"},{"location":"working-with-gosh/gosh-web/#request-dao-membership","title":"Request DAO membership","text":"<p>You can create a membership request in the DAO yourself. To do this, you need to know the link to this DAO. </p> <p>Info</p> <p>Only a registered user will be able to create a membership request.</p> <p>Follow this link and you will see the overview page of the DAO you are interested in.</p> <p>Click Request membership.</p> <p></p> <p>In the window that opens, write who you are and why you want to become a member of this DAO. This description will help the members of the DAO to make a decision when voting.</p> <p>Then click Create proposal.</p> <p></p> <p>On the event page that opens, you can find a request for your acceptance as a member of the DAO.</p> <p></p> <p>After the DAO members vote, the status of your request will change to Accepted or Rejected</p> <p>You can follow the voting and discussion by opening the event.</p>"},{"location":"working-with-gosh/gosh-web/#change-dao-member-karma","title":"Change DAO member Karma","text":"<p>Any member of the DAO can send a request to change Karma. To do this, go to the Members tab and change the number of Karma and token balance of one or more DAO members, including for yourself.</p> <p>Warning</p> <p>To create an proposal, you must have at least 20 tokens on your wallet balance.</p> <p></p> <p>Warning</p> <p>Be careful when distributing karma among the members of the DAO. Avoid the possibility of a preponderance in the votes of one of the DAO members. To avoid a situation where one participant will be able to transfer the entire balance of the DAO to his wallet.</p> <p>Then click Save changes and create proposal. As a result, a Multi proposal will be created and you will be redirected to the event page Dao.</p> <p></p> <p>Inside the event, you can get details of Multi proposal.</p> <p></p> <p>After accepting the multi proposal, the user will receive tokens and Karma from DAO reserve. This can be seen on the Members tab</p> <p></p>"},{"location":"working-with-gosh/gosh-web/#delete-members-from-the-dao","title":"Delete Members from the DAO","text":"<p>To delete a member from the DAO, go to the Members tab and click on the cross to the desired member.</p> <p>Warning</p> <p>To create an proposal, you must have at least 20 tokens on your wallet balance.</p> <p></p> <p>Confirm the deletion by clicking OK.</p> <p></p> <p>As a result, a Multi proposal will be created and you will be redirected to the event page Dao.</p> <p></p> <p>The details of the multi proposl can be seen by going to it.</p> <p></p> <p>After voting and accepting multi proposal, the user will be deleted from the list of members of the DAO. </p> <p></p> <p>The Karma of the deleted user will be equal to 0. But the tokens, if they were, will stay on the balance of the user's wallet.</p> <p></p>"},{"location":"working-with-gosh/gosh-web/#whats-next","title":"What's next?","text":"<p>Set up Git Remote Helper and continue working with your repository.</p> <p>You'll need your wallet credentials. Go to the main page of your account and click Settings. Scroll down and copy them.</p> <p></p> <p>To view the command to clone your repo, click the Clone button on your repo page.</p> <p></p>"},{"location":"working-with-gosh/gosh-web/#working-with-repository","title":"Working with Repository","text":""},{"location":"working-with-gosh/gosh-web/#create-repository","title":"Create Repository","text":"<p>To create a repository in your DAO click Create new in the Repositories section or Overview section.\u200b</p> <p></p> <p>Enter repository name and its description and click Create repository.</p> <p>Warning</p> <p>The repository name must contain only Latin letters, numbers,hyphen, underscore character<code>( a...z, 0...9, -, _ )</code></p> <p></p> <p>A page with DAO events will open for you.</p> <p></p> <p>Open the event click on its name.</p> <p></p> <p>The page that opens displays the name of the proposal, its status, and the time of creation and as well as the end of voting.</p> <p></p> <p>The scale shows the number of votes for the proposal and against.</p> <p></p> <p>Specify the number of tokens less than or equal to your Karma for voting and accept or reject this proposal.</p> <p>Add your opinion about the proposal to the discussion below and click Send vote</p> <p></p> <p>The created repository will appear in the list on the Repositories tab.</p> <p></p>"},{"location":"working-with-gosh/gosh-web/#create-branch","title":"\u200bCreate Branch","text":"<p>Repository is created with default main branch. To create another branch, click on the branches counter.\u200b</p> <p></p> <p>Select the branch to be forked, enter new branch name, and click\u200b Create branch.</p> <p>Warning</p> <p>The branch name must contain only Latin letters, numbers, hyphen, underscore character <code>( a...z, 0...9, -, _ )</code></p> <p></p> <p>Once the branch is created, it will appear in the branches list.</p> <p></p> <p>Switch to it via drop down list.</p> <p></p>"},{"location":"working-with-gosh/gosh-web/#create-file","title":"Create File","text":"<p>To create file, click Add file button.</p> <p></p> <p>Enter file contents and name.</p> <p></p> <p>You can use Preview if needed. MD syntax is supported for preview.</p> <p>After scroll down and enter commit info:</p> <ul> <li> <p>Commit description - you can add a description of your commit;</p> </li> <li> <p>Commit tags - this is a mutable pointer of the commit. You can add the tag to quickly go to this commit and see what has been done;</p> </li> <li> <p>Select task - if the branch is not protected and your file is a solution to a problem, you can choose a particular task;</p> </li> <li> <p>and add Assigners, Reviewers and Managers if necessary.</p> </li> </ul> <p>and click Commit changes</p> <p></p> <p>If the branch you are working in requires no voting to confirm commits, the file will be added. Otherwise a DAO vote will be initiated.</p> <p>Commit status will be displayed below.</p> <p></p>"},{"location":"working-with-gosh/gosh-web/#create-pull-request","title":"Create Pull Request","text":"<p>Click on the Pull requests tab and set up the pull request: what branch to merge from and to. Once selected, click Compare.</p> <p></p> <p>The branches will be compared. Review the changes, set up the pull request and click Commit changes.</p> <p></p> <p>Info</p> <p>Note: When merging into the main branch, and in some other cases (depending on DAO setup), a DAO proposal will be initiated by trying to commit.</p> <p>Organization Tokens have to be sent to the DAO Soft Majority Vote contract to start a proposal for DAO members to vote on.</p>"},{"location":"working-with-gosh/gosh-web/#working-with-task","title":"Working with Task","text":""},{"location":"working-with-gosh/gosh-web/#create-task","title":"Create Task","text":"<p>To create a Task, go to the Tasks tab and click Create Task</p> <p></p> <p>Then you need to fill in the Task conditions.</p> <p>The result of the Task should be a pull request to include changes in the repository.</p> <p>Select the repository for which the Task is being created.</p> <p></p> <p>Add the Task name.</p> <p>You can add 3 tags separated by spaces to quickly find the task.</p> <p></p> <p>Then you need to evaluate the Task.</p> <p>Task cost is the number of tokens that will be paid from the DAO reserve for its execution.</p> <p>Info</p> <p>The members of the DAO agree between themselves how to evaluate the Tasks.</p> <p>After attaching a pull request to the Task, the tokens will be distributed between the author, reviewer and manager in the ratio you set.</p> <p>Author - the person who executes the Task. Reviewer - the person who checks the correctness of the Task. Manager - the person who manages the Task execution process.</p> <p>Info</p> <p>The number of authors, areviewers and managers is set at your choice. </p> <p></p> <p>Select vesting and lock periods. </p> <p>Lock (cliff) - the period after which the reward payments will begin.  The countdown will start after accepting the proposal about completing the Task. Vesting - rules for transferring the fixed part of the tokens to the disposal of the contractor.</p> <p>For example, lock - 12 months, vesting - 2 months.  </p> <p>Warning</p> <p>In order for the investment scheme to be correct, the smaller of the number of tokens allocated to the participants of the task must be a multiple of the number of months of investment.</p> <p></p> <p>Add a comment the token distribution rules and click Create task and start proposal</p> <p></p> <p>After creating the proposal, you will be taken to the DAO page with events.</p> <p></p> <p>Inside the proposal you will be able to see all the conditions of the Task. In the table you can see the period since which month and in what parts the payments will be made to the participants of the Task.</p> <p></p> <p>After accepting the proposal, the Task will appear in the list on the Tasks tab with the status Awaiting commits.</p> <p></p> <p>When the Author has completed the Task, he adds it to the commit.</p> <p>Info</p> <p>If you need to make several commits to complete a Task,, create a separate branch. And do Select task when creating the proposal to the pull request.</p> <p></p> <p>After that a proposal to the pull request will be created.  </p> <p></p> <p>Detailed information can be viewed by going to it on the DAO tab with events.</p> <p></p> <p>If the reviewer was specified during the commit, the event will wait for verification from them.</p> <p></p> <p>Then, after the reviewer send the solution, it will be possible to vote for the proposal. When the pull request is accepted, the Task status will change to Confirmed.</p> <p></p> <p>After the lock period ends, the participants of the Task can receive a reward. To do this, go to the Tasks tab in the completed Task and click Claim reward.</p> <p>Note</p> <p>If Lock period (cliff) has been set to zero, then you can click Claim reward immediately after accepting the pull request.</p> <p></p> <p>Thus the tokens will begin to be transferred to the wallets of the participants of the completed Task in accordance with the vesting scheme when the lock period ends.</p>"},{"location":"working-with-gosh/gosh-web/#delet-task","title":"Delet\u0435 Task","text":"<p>To delete a Task, go to it on the Tasks tab. And click to Delete task</p> <p></p> <p>After creating a proposal about deleting a Task, you will be redirected to the event page Dao.</p> <p></p> <p>When the proposal is accepted, the Task will be deleted. The tokens allocated for this Task will be returned to the DAO reserve.</p>"},{"location":"working-with-gosh/verify-images-in-docker-extension/","title":"Verify Images in Docker Extension","text":"<p>Once you have pulled a GOSH image someone else built and uploaded to dockerhub, you can verify, that it was build from the exact code on GOSH that it claims to be built from.</p> <p>To do that, go to Containers Tab in Docker Extension.</p> <p></p> <p>Your containers and their hashes are listed on this tab.</p> <p>Scroll left to see the GOSH repository link it claims to be build from.</p> <p>Click Validate.</p> <p></p> <p>GOSH docker extension will read the hash of the container, rebuild the container from the specified repository, compare resulting hash and report whether the hashes match.</p> <p></p>"}]}